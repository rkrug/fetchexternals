% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetch_externals.R
\name{fetch_externals}
\alias{fetch_externals}
\title{Fetch external files from GitHub repositories}
\usage{
fetch_externals(manifest = "externals.json", quiet = FALSE)
}
\arguments{
\item{manifest}{Path to a JSON manifest file describing repositories and files.}

\item{quiet}{Logical; if \code{TRUE}, suppresses progress messages. Default \code{FALSE}.}
}
\value{
Invisibly, the number of files fetched or updated.
}
\description{
Downloads text files (e.g., \code{.qmd}) from external GitHub repositories
into the current project based on a JSON manifest. Handles authentication,
caching via ETag sidecars, and optional recording of a canonical source URL.
}
\section{Manifest format}{

The manifest is a JSON object with top-level key \code{"repos"}, each entry containing:
\itemize{
\item \code{repo} (string): Repository in \code{"owner/name"} format.
\item \code{ref}  (string): Git reference (tag, branch, or SHA). If you use \code{"latest"} in
your workflow, resolve it before calling this function, or ensure your implementation
resolves \code{"latest"} to a concrete tag.
\item \code{api_env} (string, optional): Name of the environment variable that holds the
GitHub API token to use for this repository.
\item \code{files} (array): List of file objects with:
\itemize{
\item \code{path} (string): Path inside the repository to fetch.
\item \code{dest} (string): Destination path in the current project.
\item \code{source_url} (string): \strong{One of} \code{"frontmatter"}, \code{"file"}, or \code{"none"}, controlling
how the canonical source URL is recorded:
\itemize{
\item \code{"frontmatter"} — Insert or update a \verb{source_url:} key \strong{only if} the file
has a \strong{well-formed YAML front matter} block (opening \verb{---} and a matching
closing \verb{---}). If no valid front matter is present, the file is left \strong{unchanged}.
\item \code{"file"} — Write the canonical source URL to a sidecar file named \verb{<dest>.source}.
\item \code{"none"} — Do not record the source URL.
}
}
}
}

\section{Authentication}{

For each repository, if the environment variable named by \code{api_env} is set,
API calls are authenticated via the \code{Authorization: Bearer} header. If \code{api_env}
is not provided or is empty, use your package’s default token discovery (e.g.,
\code{GITHUB_TOKEN}). Authentication increases rate limits and allows access to private
repositories.
}

\section{ETag caching}{

Each fetched file writes an \code{.etag} sidecar next to \code{dest}. On subsequent runs,
the request includes \code{If-None-Match} and the file is only re-downloaded if it changed.
}

\examples{
\dontrun{
# Fetch according to a manifest file
fetch_externals("externals.json")
}

}
