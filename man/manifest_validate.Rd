% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/manifest_validate.R
\name{manifest_validate}
\alias{manifest_validate}
\title{Validate an externals manifest}
\usage{
manifest_validate(manifest, error_on_false = TRUE)
}
\arguments{
\item{manifest}{Either:
\itemize{
\item A file path to a JSON manifest, or
\item A list already parsed from JSON (e.g., result of
\code{jsonlite::fromJSON(..., simplifyVector = FALSE)}).
}}

\item{error_on_false}{Logical.
\itemize{
\item If \code{TRUE} (default): \strong{aggregate all problems} and stop with a single
error message listing each problem on its own line.
\item If \code{FALSE}: return a character vector of all problems (or
\code{character(0)} if valid).
}}
}
\value{
\itemize{
\item Invisibly \code{TRUE} if validation succeeds and \code{error_on_false = TRUE}.
\item A character vector of problems if \code{error_on_false = FALSE}. Empty vector if valid.
}
}
\description{
Checks that a manifest (as loaded from JSON or returned by
\code{\link[=manifest_template]{manifest_template()}}) conforms to the expected schema.
Validation ensures that required fields are present, types are correct,
and values are within allowed sets.
}
\details{
\subsection{Required structure}{
\itemize{
\item Top-level object with key \code{"repos"} (array of repositories).
\item Optional \code{"defaults"} object.
}
}

\subsection{Repository fields}{
\itemize{
\item \code{repo} (\strong{required}, string): GitHub repository in \code{"owner/name"} form.
\item \code{ref} (optional, string): Git reference (tag, branch, or SHA). Must be a single string if provided.
\item \code{api_env} (optional, string): Name of environment variable for token.
\itemize{
\item Must be a single string if provided.
\item If present but not set in the current R session, a warning is issued.
}
\item \code{files} (\strong{required}, array of file objects).
}
}

\subsection{File fields}{
\itemize{
\item \code{path} (\strong{required}, string): Path in the repo.
\item \code{dest} (\strong{required}, string): Destination path in project.
\item \code{source_url} (\strong{required}, string): Must be one of:
\itemize{
\item \code{"frontmatter"}
\item \code{"file"}
\item \code{"none"}
}
}

See \code{\link[=manifest_template]{manifest_template()}} for a detailed description of the manifest schema.
}
}
\examples{
\dontrun{
# Validate a manifest file (stop with a single aggregated error if invalid)
manifest_validate("externals.json")

# Validate but collect all problems instead of stopping
issues <- manifest_validate("externals.json", error_on_false = FALSE)
if (length(issues)) writeLines(issues)
}

}
